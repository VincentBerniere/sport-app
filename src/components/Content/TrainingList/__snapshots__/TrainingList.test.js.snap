// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TrainingList renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TrainingList />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="row"
        >
          <Link
            to="/trainings/new"
          >
            <button
              className="ui primary button"
            >
              Créer un entraînement
            </button>
          </Link>
        </div>,
        <div
          id="boards"
        >
          <div
            className="boards-element"
          >
            <TrainingCard
              training={
                Object {
                  "id": 0,
                }
              }
            />
          </div>
          <div
            className="boards-element"
          >
            <TrainingCard
              training={
                Object {
                  "id": 1,
                }
              }
            />
          </div>
        </div>,
      ],
      "className": "ui centered grid",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Link
            to="/trainings/new"
          >
            <button
              className="ui primary button"
            >
              Créer un entraînement
            </button>
          </Link>,
          "className": "row",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <button
              className="ui primary button"
            >
              Créer un entraînement
            </button>,
            "to": "/trainings/new",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Créer un entraînement",
              "className": "ui primary button",
            },
            "ref": null,
            "rendered": "Créer un entraînement",
            "type": "button",
          },
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="boards-element"
            >
              <TrainingCard
                training={
                  Object {
                    "id": 0,
                  }
                }
              />
            </div>,
            <div
              className="boards-element"
            >
              <TrainingCard
                training={
                  Object {
                    "id": 1,
                  }
                }
              />
            </div>,
          ],
          "id": "boards",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "host",
            "props": Object {
              "children": <TrainingCard
                training={
                  Object {
                    "id": 0,
                  }
                }
              />,
              "className": "boards-element",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "training": Object {
                  "id": 0,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "host",
            "props": Object {
              "children": <TrainingCard
                training={
                  Object {
                    "id": 1,
                  }
                }
              />,
              "className": "boards-element",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "training": Object {
                  "id": 1,
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="row"
          >
            <Link
              to="/trainings/new"
            >
              <button
                className="ui primary button"
              >
                Créer un entraînement
              </button>
            </Link>
          </div>,
          <div
            id="boards"
          >
            <div
              className="boards-element"
            >
              <TrainingCard
                training={
                  Object {
                    "id": 0,
                  }
                }
              />
            </div>
            <div
              className="boards-element"
            >
              <TrainingCard
                training={
                  Object {
                    "id": 1,
                  }
                }
              />
            </div>
          </div>,
        ],
        "className": "ui centered grid",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Link
              to="/trainings/new"
            >
              <button
                className="ui primary button"
              >
                Créer un entraînement
              </button>
            </Link>,
            "className": "row",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <button
                className="ui primary button"
              >
                Créer un entraînement
              </button>,
              "to": "/trainings/new",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Créer un entraînement",
                "className": "ui primary button",
              },
              "ref": null,
              "rendered": "Créer un entraînement",
              "type": "button",
            },
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="boards-element"
              >
                <TrainingCard
                  training={
                    Object {
                      "id": 0,
                    }
                  }
                />
              </div>,
              <div
                className="boards-element"
              >
                <TrainingCard
                  training={
                    Object {
                      "id": 1,
                    }
                  }
                />
              </div>,
            ],
            "id": "boards",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "host",
              "props": Object {
                "children": <TrainingCard
                  training={
                    Object {
                      "id": 0,
                    }
                  }
                />,
                "className": "boards-element",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "training": Object {
                    "id": 0,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "host",
              "props": Object {
                "children": <TrainingCard
                  training={
                    Object {
                      "id": 1,
                    }
                  }
                />,
                "className": "boards-element",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "training": Object {
                    "id": 1,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
