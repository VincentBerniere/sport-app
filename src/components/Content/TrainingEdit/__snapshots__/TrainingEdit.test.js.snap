// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TrainingEdit renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TrainingEdit />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="field"
        >
          <label>
            Titre
          </label>
          <input
            id="title"
            maxLength="100"
            name="title"
            onChange={[Function]}
            placeholder="Titre"
            required={true}
            type="text"
          />
        </div>,
        <div
          className="field"
        >
          <label>
            Description
          </label>
          <textarea
            id="description"
            maxLength="5000"
            onChange={[Function]}
            placeholder="Description"
            required={true}
          />
        </div>,
        <button
          className="ui primary button"
          type="submit"
        >
          Sauvegarder
        </button>,
        undefined,
      ],
      "className": "ui form",
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label>
              Titre
            </label>,
            <input
              id="title"
              maxLength="100"
              name="title"
              onChange={[Function]}
              placeholder="Titre"
              required={true}
              type="text"
            />,
          ],
          "className": "field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Titre",
            },
            "ref": null,
            "rendered": "Titre",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "title",
              "maxLength": "100",
              "name": "title",
              "onChange": [Function],
              "placeholder": "Titre",
              "required": true,
              "type": "text",
              "value": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label>
              Description
            </label>,
            <textarea
              id="description"
              maxLength="5000"
              onChange={[Function]}
              placeholder="Description"
              required={true}
            />,
          ],
          "className": "field",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Description",
            },
            "ref": null,
            "rendered": "Description",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "id": "description",
              "maxLength": "5000",
              "onChange": [Function],
              "placeholder": "Description",
              "required": true,
              "value": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "textarea",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Sauvegarder",
          "className": "ui primary button",
          "type": "submit",
        },
        "ref": null,
        "rendered": "Sauvegarder",
        "type": "button",
      },
      undefined,
    ],
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="field"
          >
            <label>
              Titre
            </label>
            <input
              id="title"
              maxLength="100"
              name="title"
              onChange={[Function]}
              placeholder="Titre"
              required={true}
              type="text"
            />
          </div>,
          <div
            className="field"
          >
            <label>
              Description
            </label>
            <textarea
              id="description"
              maxLength="5000"
              onChange={[Function]}
              placeholder="Description"
              required={true}
            />
          </div>,
          <button
            className="ui primary button"
            type="submit"
          >
            Sauvegarder
          </button>,
          undefined,
        ],
        "className": "ui form",
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Titre
              </label>,
              <input
                id="title"
                maxLength="100"
                name="title"
                onChange={[Function]}
                placeholder="Titre"
                required={true}
                type="text"
              />,
            ],
            "className": "field",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Titre",
              },
              "ref": null,
              "rendered": "Titre",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "title",
                "maxLength": "100",
                "name": "title",
                "onChange": [Function],
                "placeholder": "Titre",
                "required": true,
                "type": "text",
                "value": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <label>
                Description
              </label>,
              <textarea
                id="description"
                maxLength="5000"
                onChange={[Function]}
                placeholder="Description"
                required={true}
              />,
            ],
            "className": "field",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Description",
              },
              "ref": null,
              "rendered": "Description",
              "type": "label",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "id": "description",
                "maxLength": "5000",
                "onChange": [Function],
                "placeholder": "Description",
                "required": true,
                "value": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "textarea",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Sauvegarder",
            "className": "ui primary button",
            "type": "submit",
          },
          "ref": null,
          "rendered": "Sauvegarder",
          "type": "button",
        },
        undefined,
      ],
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`TrainingEdit when typing into the editing form inputs update the description \`state\` correctly: Sed ut perspiciatis unde omnis is ... 1`] = `undefined`;

exports[`TrainingEdit when typing into the editing form inputs update the title \`state\` correctly: Training 1 1`] = `undefined`;
